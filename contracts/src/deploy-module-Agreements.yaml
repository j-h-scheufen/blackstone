jobs:

#####
# Retrieve DOUG
#####
- name: DOUG
  query-name:
      name: DOUG
      field: data

#####
# Retrieve Library Addresses
#####
- name: ErrorsLib
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [ErrorsLib]

- name: TypeUtils
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [TypeUtils]

- name: ArrayUtils
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [ArrayUtils]

- name: MappingsLib
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [MappingsLib]

- name: DataStorageUtils
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [DataStorageUtils]

- name: ERC165Utils
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [ERC165Utils]

- name: BpmRuntimeLib
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [BpmRuntimeLib]

- name: AgreementsAPI
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [AgreementsAPI]

#####
# Other Dependencies
#####
- name: BpmService
  query-contract:
    destination: $DOUG
    bin: DOUG
    function: lookup
    data: [BpmService]

#####
# ArchetypeRegistry
#####
- name: ArchetypeRegistry
  deploy:
    contract: DefaultArchetypeRegistry.bin
    libraries: ErrorsLib:$ErrorsLib, ArrayUtilsAPI:$ArrayUtils, MappingsLib:$MappingsLib

- name: ArchetypeRegistryDb
  deploy:
    contract: ArchetypeRegistryDb.bin
    libraries: ErrorsLib:$ErrorsLib, ArrayUtilsAPI:$ArrayUtils, MappingsLib:$MappingsLib

- name: ChangeArchetypeRegistryDbOwnership
  call:
    destination: $ArchetypeRegistryDb
    bin: ArchetypeRegistryDb
    function: transferSystemOwnership
    data: [$ArchetypeRegistry]

- name: SetArchetypeRegistryDb
  call:
    destination: $ArchetypeRegistry
    bin: DefaultArchetypeRegistry
    function: acceptDatabase
    data: [$ArchetypeRegistryDb]

- name: AssertArchetypeRegistryDb
  assert:
    key: $SetArchetypeRegistryDb
    relation: eq
    val: "true"

- name: ChangeArchetypeRegistryUpgradeOwnership
  call:
    destination: $ArchetypeRegistry
    bin: UpgradeOwned
    function: transferUpgradeOwnership
    data: [$DOUG]

- name: DeployArchetypeRegistry
  call:
    destination: $DOUG
    bin: DOUG
    function: deploy
    data: ["AN://services/ArchetypeRegistry", $ArchetypeRegistry]

- name: AssertArchetypeRegistry
  assert:
    key: $DeployArchetypeRegistry
    relation: eq
    val: "true"

#####
# ActiveAgreementRegistry
#####
- name: ActiveAgreementRegistry
  deploy:
    contract: agreements/DefaultActiveAgreementRegistry.sol
    libraries: ErrorsLib:$ErrorsLib, TypeUtilsAPI:$TypeUtils, ArrayUtilsAPI:$ArrayUtils, MappingsLib:$MappingsLib, BpmRuntimeLib:$BpmRuntimeLib, DataStorageUtils:$DataStorageUtils, ERC165Utils:$ERC165Utils, AgreementsAPI:$AgreementsAPI
    data: ["AN://services/ArchetypeRegistry", "AN://services/BpmService"]

- name: ActiveAgreementRegistryDb
  deploy:
    contract: ActiveAgreementRegistryDb.bin
    libraries: ErrorsLib:$ErrorsLib, ArrayUtilsAPI:$ArrayUtils, MappingsLib:$MappingsLib

- name: ChangeAgreementRegistryDbOwnership
  call:
    destination: $ActiveAgreementRegistryDb
    bin: ActiveAgreementRegistryDb
    function: transferSystemOwnership
    data: [$ActiveAgreementRegistry]

- name: SetActiveAgreementRegistryDb
  call:
    destination: $ActiveAgreementRegistry
    bin: DefaultActiveAgreementRegistry
    function: acceptDatabase
    data: [$ActiveAgreementRegistryDb]

- name: AssertActiveAgreementRegistryDb
  assert:
    key: $SetActiveAgreementRegistryDb
    relation: eq
    val: "true"

- name: ChangeActiveAgreementRegistryUpgradeOwnership
  call:
    destination: $ActiveAgreementRegistry
    bin: UpgradeOwned
    function: transferUpgradeOwnership
    data: [$DOUG]

- name: DeployActiveAgreementRegistry
  call:
    destination: $DOUG
    bin: DOUG
    function: deploy
    data: ["AN://services/ActiveAgreementRegistry", $ActiveAgreementRegistry]

- name: AssertActiveAgreementRegistry
  assert:
    key: $DeployActiveAgreementRegistry
    relation: eq
    val: "true"

- name: getBpmServiceFromAgreementRegistry
  call:
    destination: $ActiveAgreementRegistry
    bin: ActiveAgreementRegistry
    function: getBpmService

- name: assertBpmService
  assert:
    key: $getBpmServiceFromAgreementRegistry
    relation: eq
    val: $BpmService

- name: getArchetypeRegistryFromAgreementRegistry
  call:
    destination: $ActiveAgreementRegistry
    bin: ActiveAgreementRegistry
    function: getArchetypeRegistry

- name: assertArchetypeRegistry
  assert:
    key: $getArchetypeRegistryFromAgreementRegistry
    relation: eq
    val: $ArchetypeRegistry

#####
# Register object classes
#####

- name: DefaultArchetypeImplementation
  deploy:
    contract: DefaultArchetype.bin
    libraries: ErrorsLib:$ErrorsLib, ArrayUtilsAPI:$ArrayUtilsAPI, MappingsLib:$MappingsLib

- name: ObjectClassArchetype
  query-contract:
    destination: $ArchetypeRegistry
    bin: ArchetypeRegistry
    function: OBJECT_CLASS_ARCHETYPE

- name: RegisterArchetypeObjectClass
  call:
    destination: $DOUG
    bin: DOUG
    function: register
    data: [$ObjectClassArchetype, $DefaultArchetypeImplementation]

- name: DefaultActiveAgreementImplementation
  deploy:
    contract: DefaultActiveAgreement.bin
    libraries: ErrorsLib:$ErrorsLib, ArrayUtilsAPI:$ArrayUtilsAPI, MappingsLib:$MappingsLib

- name: ObjectClassActiveAgreement
  query-contract:
    destination: $ActiveAgreementsRegistry
    bin: ActiveAgreementsRegistry
    function: OBJECT_CLASS_AGREEMENT

- name: RegisterActiveAgreementObjectClass
  call:
    destination: $DOUG
    bin: DOUG
    function: register
    data: [$ObjectClassActiveAgreement, $DefaultActiveAgreementImplementation]
